trigger:
  - '*'
  
pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  # dockerRegistryServiceConnection: 'NexosRegistry'
  # imageRepository: 'test'
  # containerRegistry: 'nexos.azurecr.io'
  # dockerfilePath: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
  # tag: '$(Build.BuildId)'

  dockerRegistryServiceConnection: 'DockerHub'
  imageRepository: 'edissonpena/nexos'
  dockerfilePath: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
  tag: '$(Build.BuildId)'

steps:
# - task: UseDotNet@2
#   displayName: 'Use .NET SDK 6.x'
#   inputs:
#     packageType: sdk
#     version: '6.x'

# - task: DotNetCoreCLI@2
#   displayName: 'Restore project dependencies'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Build the project - Release'
#   inputs:
#     command: 'build'
#     arguments: '--no-restore --configuration Release'
#     projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Publish the project - Release'
#   inputs:
#     command: 'publish'
#     projects: '**/*.csproj'
#     publishWebProjects: false
#     arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
#     zipAfterPublish: true

# - publish: '$(Build.ArtifactStagingDirectory)'
#   artifact: drop

# - download: current
#   artifact: drop

# - task: Docker@2
#   displayName: Build and push an image to container registry
#   inputs:
#     command: buildAndPush
#     repository: $(imageRepository)
#     dockerfile: $(dockerfilePath)
#     containerRegistry: $(dockerRegistryServiceConnection)
#     tags: |
#       latest
#       $(tag)

- task: Docker@2
  displayName: Build and push an image to container registry
  inputs:
    command: buildAndPush
    repository: $(imageRepository)
    dockerfile: $(dockerfilePath)
    containerRegistry: $(dockerRegistryServiceConnection)
    tags: |
      latest
      $(tag)
  
# - task: AzureWebApp@1
#   displayName: 'Azure App Service Deploy: website'
#   inputs:
#     azureSubscription: 'Azure'
#     appName: 'nexos'
#     package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'

# - task: AzureWebAppContainer@1
#   displayName: 'Deploy the container'
#   inputs:
#     azureSubscription: 'NexosApp'
#     appName: 'nexosapp'
#     imageName: 'nexos.azurecr.io/test:latest'

- task: AzureWebAppContainer@1
  displayName: 'Deploy the container'
  inputs:
    azureSubscription: 'NexosTest'
    appName: 'nexostest'
    imageName: 'edissonpena/nexos:latest'